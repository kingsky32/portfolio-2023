// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Config {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  createdAt   DateTime @default(now()) @map(name: "created_at")
}

model Account {
  id                String  @id @default(cuid())
  userId            String  @map("user_id")
  provider          String
  providerAccountId String  @map("provider_account_id")
  access_token      String? @db.Text
  refresh_token     String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id            String    @id @default(cuid())
  firstName     String?   @map("first_name")
  lastName      String?   @map("last_name")
  name          String?
  nickname      String?   @unique
  username      String?   @unique
  email         String?   @unique
  emailVerified DateTime? @map("email_verified")
  password      String?
  bio           String?
  image         String?
  accounts      Account[]
  sessions      Session[]
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @updatedAt @map(name: "updated_at")

  @@map("users")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verification_tokens")
}
